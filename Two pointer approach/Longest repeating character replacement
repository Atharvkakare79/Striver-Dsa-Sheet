----BRUTE FORCE-----



class Solution {
    public int characterReplacement(String s, int k) {
      int left=0;
      int maxcount=0;
      int maximum=0;
      for(int i=0;i<s.length();i++){
        int[] arr=new int[26];
        for(int j=i;j<s.length();j++){
            arr[s.charAt(j)-'A']++;
            maxcount=Math.max(maxcount,arr[s.charAt(j)-'A']);
            int changes=(j-i+1)-maxcount;
            if(changes<=k){
                maximum=Math.max(maximum,j-i+1);
            }
            else{
                break;
            }
        }
        
      }
      return maximum;
    }
}



-----OPTIMAL SOLUTION-----


class Solution {
    public int characterReplacement(String s, int k) {
      int left=0;
      int maxfreq=0;
      int maxlength=0;
      int[] freq=new int[26];
      for(int right=0;right<s.length();right++){
        freq[s.charAt(right)-'A']++;
        maxfreq=Math.max(maxfreq,freq[s.charAt(right)-'A']);
        while((right-left+1)-maxfreq>k){
            freq[s.charAt(left)-'A']--;
            left++;
        }
             maxlength = Math.max(maxlength, right - left + 1);
      }
      return maxlength;
    }
}
