class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        int low = 1;
        int high = Arrays.stream(nums).max().getAsInt(); // max value in nums
        int ans = high;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            int sum = checkval(nums, mid);

            if (sum <= threshold) {
                ans = mid;        // candidate for smallest divisor
                high = mid - 1;   // try to find smaller one
            } else {
                low = mid + 1;    // need a larger divisor
            }
        }
        return ans;
    }

    public int checkval(int[] nums, int divisor) {
        int sum = 0;
        for (int num : nums) {
            sum +=  (int)Math.ceil((double) num / divisor);
        }
        return sum;
    }
}

