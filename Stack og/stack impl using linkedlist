// Node class for linked list
class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

// Stack class using Linked List
class Stack {
    Node top;

    // Push element onto the stack
    void push(int x) {
        Node newNode = new Node(x);
        newNode.next = top; // point new node to previous top
        top = newNode;      // make new node the new top
    }

    // Pop element from the stack
    int pop() {
        if (top == null) {
            System.out.println("Stack Underflow");
            return -1;
        }
        int popped = top.data;
        top = top.next; // move top one node down
        return popped;
    }

    // Peek top element
    int peek() {
        if (top == null) {
            System.out.println("Stack is Empty");
            return -1;
        }
        return top.data;
    }

    // Check if stack is empty
    boolean isEmpty() {
        return top == null;
    }

    public static void main(String[] args) {
        Stack s = new Stack();

        s.push(10);
        s.push(20);
        s.push(30);

        System.out.println("Top element: " + s.peek());
        System.out.println("Popped: " + s.pop());
        System.out.println("Top after pop: " + s.peek());
        System.out.println("Is stack empty? " + s.isEmpty());
    }
}
